function Write-Header(){
    Clear-Host
    Write-Host @"
[101;93m   POWER-CMD                         [0m
[107;30m   Made by gacarbla                  [0m
"@
}

function Test-InternetConnection {
    param (
        [string]$url = "http://www.google.com",
        [int]$timeout = 5000
    )

    try {
        $request = [System.Net.WebRequest]::Create($url)
        $request.Timeout = $timeout
        $response = $request.GetResponse()
        $response.Close()
        return $true
    } catch {
        return $false
    }
}

function Install-Libraries {
    param(
        [bool]$git = $true,
        [bool]$python = $true,
        [bool]$XAMPP = $true
    )

    $winget = Get-Command winget -ErrorAction SilentlyContinue

    if (-not $winget) {Clear-Host
        Write-Header
        Write-Host @"

Installing Winget...

This is a slow process. Please wait patiently and do not close this window.
[91mDO NOT CLOSE THIS WINDOW[0m
"@
        $URL = "https://api.github.com/repos/microsoft/winget-cli/releases/latest"
        $URL = (Invoke-WebRequest -Uri $URL).Content | ConvertFrom-Json |
                Select-Object -ExpandProperty "assets" |
                Where-Object "browser_download_url" -Match '.msixbundle' |
                Select-Object -ExpandProperty "browser_download_url"
        Invoke-WebRequest -Uri $URL -OutFile "Setup.msix" -UseBasicParsing > $null
        Add-AppxPackage -Path "Setup.msix" > $null
        Remove-Item "Setup.msix" > $null
    }

    if ($git) {
        Clear-Host
        Write-Header
        Write-Host @"

Installing Git...

Please wait
[91mDO NOT CLOSE THIS WINDOW[0m
"@
        winget install Git.Git > $null
    }

    if ($python) {
        Clear-Host
        Write-Header
        Write-Host @"

Installing Python3...

Please wait
[91mDO NOT CLOSE THIS WINDOW[0m
"@
        winget install python3 > $null
    }

    Start-Process -FilePath .\src\windows\install_requirements.cmd

    if ($XAMPP) {
        Clear-Host
        Write-Header
        Write-Host @"

Installing XAMPP...

Please wait
[91mDO NOT CLOSE THIS WINDOW[0m
"@
        winget install ApacheFriends.Xampp.8.2 > $null
    }
}

function Select-Language {
    Clear-Host
    Write-Header
    Write-Host @"

SELECT YOUR DEFAULT LANGUAGE
    ([93m1[0m) ENGLISH
    ([93m2[0m) SPANISH
    ([93m3[0m) GALICIAN
    ([93m4[0m) FRENCH
"@
    $Language = Read-Host -Prompt "`n [93m>_[0m "

    switch ($Language) {
        1 { return "english" }
        2 { return "spanish" }
        3 { return "galician" }
        4 { return "french" }
        default { return $null }
    }
}

function Select-Color {
    Clear-Host
    Write-Header
    Write-Host @"

SELECT AN OPTION
    ([93m1[0m) ALLOW COLORS
    ([93m2[0m) MAKE LIFE BLACK AND WHITE
"@
    $Choose = Read-Host -Prompt "`n [93m>_[0m "

    switch ($Choose) {
        1 { return "y" }
        2 { return "n" }
        default { return $null }
    }
}

function ConfigurationSave() {
    param(
        [string]$language = "spanish",
        [string]$color = "y"
    )
    @"
; This file has been automatically generated by the tool's
; installation wizard. Please do not modify the name of
; the parameters expressed here.

[Settings]
language = $language
color = $color
"@ | Out-File -FilePath .\src\config\config.ini -Encoding Ascii
}

function Wizard(){
    Clear-Host
    if (Get-Installation) {
        $filePath = Get-FilePath
        $fileContent = Get-Content $filePath -Raw
        Write-Header
        if ($fileContent -match "installed") {
            Write-Host @"
            
(1) Uninstall
(2) Reinstall last version
(3) Exit
"@          $choice = Read-Host "`n [93m>_[0m "
            if ($choice -eq 1) {
                git clone "https://github.com/gacarbla/power-cmd.git"
                $rutaActual = Get-Location
                $gitPath = Join-Path -Path $rutaActual -ChildPath "power-cmd"
                $srcPath = Join-Path -Path $rutaActual -ChildPath "src"
                Remove-Item -Path $gitPath -Force -Recurse
                Remove-Item -Path $srcPath -Force -Recurse
            } elseif ($choice -eq 2) {
                Install
            }
        } elseif ($fileContent -match "error") {
            Write-Host @"
            
(1) Retry installation
(2) Exit
"@
            $choice = Read-Host "`n [93m>_[0m "
            if ($choice -eq 1) {
                Install
            }
        } else {
            Write-Host @"
            
(1) Install last version
(2) Exit
"@
            $choice = Read-Host "`n [93m>_[0m "
            if ($choice -eq 1) {
                Install
            }
        }
        return
    }
    Install
}
function Install(){
    $path = Get-FilePath
    Write-Header
    Out-File -FilePath $path -InputObject "installing"
    Write-Host @"

WELCOME TO THE INSTALLATION MANAGER!
WOULD YOU LIKE TO BEGIN?
    ([92m1[0m)[4m YES[0m
    ([91m2[0m)[4m NO[0m
"@
    $DECISION = Read-Host -Prompt "`n [93m>_[0m "
    if ( $DECISION -eq 1 ){
        Clear-Host
        Write-Header
        Write-Host @"

CHOOSE AN OPTION
    ([93m1[0m)[4m MANUAL-INSTALLATION[0m
    ([93m2[0m)[4m AUTO-INSTALLATION[0m
"@
        $DECISION2 = Read-Host -Prompt "`n [93m>_[0m "
        Clear-Host
        Install-Libraries
        if (DownloadRepo) {
            Clear-Host
            Write-Header
            Write-Host @"

Saving data

Please wait...
[91mDO NOT CLOSE THIS WINDOW[0m
"@
            if ( $DECISION2 -eq 1 ){
                $lang = Select-Language
                $color = Select-Color
                ConfigurationSave -language $lang -color $color
            } else {
                ConfigurationSave
            }
            Out-File -FilePath $path -InputObject "installed"
            Clear-Host
            Write-Host @"
Installation completed!
Thanks for installing POWER-CMD.

This window will be closed in 15 seconds.
"@
            Start-Sleep -Seconds 15
        } else {
            Write-Host @"
            
Error downloading data package ---> [91mEXIT[0m

This window will be closed in 15 seconds.
"@
            Set-Content -Path $path -Value "error"
            Start-Sleep -Seconds 15
            Exit-PSSession
        }
    }
    else{
        Write-Host @"

Installation interrupted by user ---> [91mEXIT[0m

This window will be closed in 15 seconds.
"@
        Start-Sleep -Seconds 15
        Exit-PSSession;
    }
}

function Get-FilePath(){
    $relativeDir = Get-Location
    $fileName = "installation_data"
    $fileDir = Join-Path -Path $relativeDir -ChildPath $fileName
    return $fileDir
}

function DownloadRepo(){
    try {
        Clear-Host
        Write-Header
        Write-Host @"

Downloading files...

Please wait

-------------------------------------

"@
        git clone "https://github.com/gacarbla/power-cmd.git"
        $rutaActual = Get-Location
        $gitPath = Join-Path -Path $rutaActual -ChildPath "power-cmd"
        $srcFolder = Join-Path -Path $rutaActual -ChildPath "power-cmd\src"
        if (Test-Path $srcFolder -PathType Container) {
            Move-Item -Path $srcFolder -Destination $rutaActual -Force
            Remove-Item -Path $gitPath -Force -Recurse
            return $true
        }
        if (Test-Path $gitPath -PathType Container) {
            Remove-Item -Path $gitPath -Force -Recurse
        }
        return $false
    } catch {
        Write-Host "ERROR"
        return $false
    }
}

function Get-Installation(){
    $path = Get-FilePath
    if (Test-Path $path) {
        return $true
    } else {
        return $false
    }
}

$connected = Test-InternetConnection
if ($connected) {
    Wizard;
} else {
    Write-Host @"
[31mConnection error:[0m
    Please check your internet connection and try again.

This window will be closed in 5 seconds.
"@
    Start-Sleep -Seconds 5;
}

Exit-PSSession;